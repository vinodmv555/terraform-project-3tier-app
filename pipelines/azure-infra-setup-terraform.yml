---
trigger: none
name: Setup ${{ parameters.environment }} App Infra
appendCommitMessageToRunName: false 

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: environment
    displayName: Select Environment
    type: string
    default: Development
    values:
      - Development
      - Acceptance 
      - Production 

variables:
  - name: env
    '${{ if eq(parameters.environment, ''Development'' ) }}':
      value: dev 
    '${{ if eq(parameters.environment, ''Acceptance'' ) }}':
      value: acc
    '${{ if eq(parameters.environment, ''Production'' ) }}':
      value: prd
  
  - name: backend_storage_rg 
    value: rg-terraform-backends
  - name: backend_storage_account
    value: terraformbackends286957
  - name: backend_storage_container
    value: terraform-backend-myapp
  - name: backend_storage_key
    value: $(env)-webapp.terraform.tfstate  

stages:
  - stage: Terraform_Validate 
    jobs:
      - job: Terrafrom_Validate 
        displayName: Validate Terraform
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'
          
          - task: Bash@3
            displayName: Variable Value Check
            inputs:
              targetType: 'inline'
              script: |
                echo "Running on agent: $(Agent.Name)"
                echo "Selected environment: ${{ parameters.environment }}"
                echo "Env shorthand: $(env)"
                echo "Backend RG: $(backend_storage_rg)"
                echo "Backend Storage Account: $(backend_storage_account)"
                echo "Backend Storage Container: $(backend_storage_container)"
                echo "Backend Storage Key: $(backend_storage_key) "

          - task: TerraformTask@5
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'hcldevops-to-azurecloud'
              backendAzureRmResourceGroupName: '$(backend_storage_rg)'
              backendAzureRmStorageAccountName: '$(backend_storage_account)'
              backendAzureRmContainerName: '$(backend_storage_container)'
              backendAzureRmKey: '$(backend_storage_key)'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'